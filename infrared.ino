#include <IRremote.h> 

IRsend irsend; 

void setup() {        
  Serial.begin(9600);
}
String inData;


const unsigned int irTable[24][69] PROGMEM = { 
  {9110, 4522, 566, 562, 604, 536, 606, 537, 614, 528, 608, 535, 611, 532, 606, 543, 603, 534, 607, 1652, 606, 1653, 576, 1673, 591, 1675, 604, 559, 584, 1651, 603, 1677, 577, 1648, 592, 553, 604, 534, 607, 536, 583, 573, 595, 536, 606, 535, 583, 570, 597, 535, 608, 1660, 575, 1670, 610, 1668, 568, 1698, 603, 1621, 620, 1646, 580, 1676, 601, 1658, 599},  //brightup
  {9017, 4578, 532, 634, 508, 598, 489, 651, 593, 576, 515, 636, 509, 574, 618, 557, 482, 628, 542, 1742, 516, 1753, 623, 1647, 510, 1599, 732, 870, 380, 1902, 128, 886, 421, 442, 516, 1885, 260, 1917, 430, 727, 489, 552, 590, 606, 462, 647, 554, 589, 608, 558, 465, 657, 560, 581, 511, 1746, 585, 1671, 531, 1755, 449, 1792, 550, 1681, 614, 1640, 564, 1717, 489}, //brightdown
  {9074, 4531, 582, 620, 512, 587, 562, 603, 540, 603, 517, 601, 563, 576, 541, 626, 513, 603, 540, 1719, 546, 1707, 541, 1729, 586, 1693, 505, 625, 490, 1746, 568, 1684, 540, 1727, 504, 634, 561, 1690, 538, 632, 536, 600, 515, 603, 563, 623, 522, 597, 518, 602, 540, 1714, 539, 632, 507, 1731, 526, 1715, 562, 1737, 525, 1705, 570, 1666, 540, 1725, 530}, //off
  {9129, 4513, 568, 571, 601, 538, 580, 561, 607, 538, 583, 558, 630, 519, 642, 498, 605, 563, 579, 1653, 594, 1656, 584, 1671, 577, 1688, 570, 588, 552, 1690, 568, 1691, 578, 1675, 576, 1687, 570, 1680, 597, 543, 596, 572, 554, 570, 571, 574, 568, 566, 573, 615, 533, 564, 577, 564, 579, 1685, 575, 1672, 581, 1704, 552, 1702, 548, 1713, 547, 1704, 548}, //on
  {9136, 4497, 571, 588, 549, 617, 553, 569, 541, 600, 544, 625, 542, 569, 544, 592, 550, 619, 551, 1698, 532, 1710, 544, 1715, 543, 1731, 545, 568, 545, 1724, 534, 1704, 550, 1713, 544, 617, 547, 603, 516, 1713, 542, 604, 537, 591, 550, 622, 525, 615, 557, 563, 548, 1709, 548, 1712, 595, 538, 555, 1708, 539, 1713, 549, 1704, 548, 1704, 544, 1721, 516}, //red
  {9074, 4545, 564, 593, 522, 598, 547, 631, 532, 598, 516, 630, 522, 618, 548, 587, 540, 600, 547, 1684, 554, 1707, 548, 1733, 517, 1738, 533, 601, 521, 1733, 532, 1734, 526, 1704, 540, 624, 547, 569, 545, 623, 518, 1715, 541, 618, 530, 588, 550, 617, 521, 620, 550, 1706, 527, 1707, 545, 1710, 538, 620, 526, 1713, 542, 1707, 544, 1715, 548, 1724, 523}, //red1
  {9144, 4476, 591, 553, 604, 535, 632, 508, 608, 540, 592, 546, 606, 536, 607, 534, 605, 532, 610, 1651, 605, 1661, 588, 1646, 607, 1661, 620, 510, 581, 1686, 571, 1689, 590, 1647, 609, 534, 606, 535, 605, 1661, 575, 1676, 577, 564, 586, 553, 609, 533, 604, 535, 587, 1681, 569, 1680, 622, 516, 583, 556, 602, 1650, 615, 1641, 580, 1678, 577, 1676, 582}, //red2
  {9130, 4513, 576, 562, 551, 594, 573, 566, 586, 564, 551, 585, 555, 594, 543, 593, 550, 592, 575, 1657, 544, 1706, 586, 1672, 599, 1680, 576, 570, 577, 1659, 567, 1679, 608, 1646, 614, 529, 613, 529, 577, 571, 575, 567, 604, 1657, 572, 586, 585, 536, 606, 534, 577, 1676, 582, 1677, 600, 1651, 602, 1662, 577, 564, 606, 1643, 576, 1692, 587, 1654, 581}, //red3
  {9083, 4542, 564, 621, 498, 622, 517, 624, 518, 627, 524, 624, 487, 666, 533, 587, 524, 623, 516, 1742, 542, 1711, 561, 1702, 536, 1710, 548, 621, 517, 1704, 523, 1717, 538, 1749, 510, 605, 538, 625, 544, 1691, 567, 620, 520, 1718, 532, 599, 544, 582, 557, 600, 542, 1696, 550, 1727, 517, 631, 539, 1681, 543, 632, 539, 1696, 538, 1748, 503, 1723, 511}, //red4
  {9096, 4503, 579, 610, 530, 574, 539, 604, 565, 637, 504, 608, 544, 575, 584, 587, 477, 603, 544, 1738, 539, 1740, 525, 1704, 590, 1708, 500, 632, 512, 1745, 562, 1670, 583, 1668, 538, 1715, 544, 602, 565, 1687, 565, 604, 512, 626, 512, 602, 546, 622, 511, 624, 490, 628, 548, 1725, 523, 601, 539, 1736, 526, 1706, 540, 1730, 501, 1774, 507, 1738, 573}, //green
  {9104, 4519, 566, 569, 568, 601, 546, 602, 541, 567, 568, 600, 577, 563, 519, 598, 542, 626, 579, 1650, 567, 1699, 558, 1713, 524, 1731, 517, 608, 564, 1725, 506, 1740, 542, 1739, 520, 1685, 539, 624, 570, 576, 515, 1742, 536, 573, 539, 636, 565, 571, 516, 625, 524, 613, 546, 1694, 541, 1741, 506, 601, 540, 1723, 535, 1714, 540, 1751, 541, 1682, 573}, //green1
  {9109, 4532, 553, 619, 551, 567, 543, 633, 504, 620, 522, 595, 545, 630, 537, 595, 553, 567, 552, 1711, 540, 1758, 520, 1684, 546, 1708, 546, 621, 522, 1715, 566, 1682, 550, 1706, 585, 1671, 574, 619, 499, 1723, 533, 1713, 571, 571, 551, 588, 550, 619, 544, 579, 545, 595, 514, 1734, 550, 594, 544, 622, 549, 1691, 539, 1707, 554, 1700, 552, 1768, 487}, //green2
  {9112, 4516, 569, 590, 519, 630, 519, 622, 538, 578, 539, 619, 522, 617, 538, 581, 549, 617, 547, 1723, 507, 1708, 553, 1730, 546, 1695, 565, 590, 526, 1735, 521, 1736, 548, 1689, 537, 1717, 548, 614, 525, 618, 524, 599, 543, 1708, 545, 593, 551, 623, 543, 596, 525, 617, 524, 1706, 550, 1740, 557, 1720, 521, 591, 515, 1742, 540, 1710, 546, 1683, 553}, //green3
  {9103, 4512, 543, 600, 564, 579, 552, 644, 494, 601, 568, 577, 564, 626, 464, 597, 597, 602, 565, 1671, 552, 1696, 538, 1739, 516, 1719, 564, 614, 500, 1751, 568, 1690, 579, 1660, 544, 1697, 538, 599, 565, 1685, 544, 635, 532, 1688, 568, 611, 532, 605, 509, 601, 540, 638, 515, 1718, 528, 645, 525, 1701, 554, 576, 544, 1797, 513, 1689, 555, 1678, 560}, //green4
  {9076, 4543, 544, 594, 567, 600, 533, 610, 541, 574, 541, 627, 569, 574, 518, 602, 589, 601, 517, 1683, 593, 1677, 526, 1775, 512, 1710, 523, 614, 524, 1718, 533, 1745, 539, 1715, 569, 574, 513, 1738, 541, 1725, 530, 632, 486, 628, 538, 595, 522, 596, 545, 624, 521, 1721, 552, 603, 536, 601, 515, 1741, 540, 1729, 529, 1735, 525, 1685, 536, 1748, 538}, //blue
  {9136, 4515, 548, 618, 520, 628, 522, 613, 528, 592, 547, 619, 555, 584, 525, 598, 545, 614, 525, 1719, 541, 1710, 537, 1714, 569, 1679, 579, 563, 558, 1695, 549, 1706, 576, 1680, 558, 582, 550, 1711, 577, 562, 549, 1715, 538, 596, 549, 592, 552, 587, 556, 590, 550, 1738, 511, 595, 549, 1705, 553, 591, 571, 1683, 599, 1655, 552, 1711, 543, 1726, 550}, //blue1
  {9107, 4515, 609, 531, 588, 553, 607, 539, 609, 535, 574, 567, 578, 565, 575, 562, 607, 539, 597, 1664, 569, 1675, 603, 1661, 595, 1665, 570, 563, 610, 1642, 622, 1634, 577, 1685, 597, 538, 606, 1661, 601, 1652, 599, 1659, 607, 525, 577, 564, 625, 516, 609, 536, 579, 1681, 577, 564, 603, 539, 574, 565, 580, 1677, 583, 1682, 597, 1648, 574, 1683, 577}, //blue2
  {9141, 4492, 597, 533, 632, 510, 613, 531, 581, 559, 608, 534, 617, 526, 604, 538, 607, 534, 640, 1632, 593, 1669, 606, 1636, 581, 1675, 602, 534, 589, 1678, 600, 1650, 605, 1655, 604, 533, 575, 1674, 620, 524, 628, 513, 608, 1653, 594, 540, 636, 516, 572, 552, 606, 1654, 586, 552, 605, 1651, 581, 1671, 583, 563, 606, 1647, 605, 1648, 604, 1661, 577}, //blue3
  {9109, 4504, 609, 584, 553, 542, 583, 569, 572, 557, 602, 546, 572, 588, 584, 535, 607, 539, 599, 1652, 607, 1656, 600, 1655, 577, 1678, 575, 591, 577, 1675, 579, 1659, 573, 1684, 591, 563, 553, 1681, 604, 1660, 568, 564, 583, 1683, 568, 589, 577, 566, 567, 550, 575, 1703, 592, 551, 553, 570, 578, 1688, 570, 615, 526, 1681, 573, 1688, 571, 1685, 598}, //blue4
  {9025, 4552, 559, 594, 502, 625, 543, 618, 548, 595, 544, 599, 517, 621, 547, 573, 543, 623, 524, 1713, 542, 1730, 548, 1693, 561, 1691, 547, 610, 563, 1690, 549, 1717, 524, 1697, 549, 1719, 536, 1736, 521, 1741, 555, 553, 546, 596, 545, 621, 547, 595, 554, 595, 523, 622, 537, 593, 546, 573, 544, 1717, 550, 1729, 517, 1749, 536, 1694, 538, 1737, 520}, //white
  {9144, 4497, 561, 561, 605, 534, 639, 510, 583, 566, 569, 562, 612, 536, 603, 533, 604, 541, 604, 1662, 600, 1670, 577, 1650, 592, 1678, 592, 537, 607, 1661, 593, 1661, 598, 1647, 614, 1651, 577, 1674, 587, 558, 603, 1661, 565, 571, 603, 533, 581, 563, 579, 561, 606, 535, 606, 542, 578, 1737, 516, 563, 607, 1661, 563, 1688, 593, 1651, 605, 1663, 594}, //flash
  {9136, 4483, 611, 532, 601, 538, 611, 534, 606, 535, 607, 537, 580, 562, 607, 534, 611, 530, 610, 1648, 608, 1657, 571, 1677, 607, 1649, 584, 560, 608, 1648, 578, 1687, 567, 1678, 603, 1675, 577, 1651, 612, 1644, 579, 1687, 570, 562, 580, 563, 613, 552, 556, 561, 606, 537, 605, 538, 580, 562, 580, 563, 586, 1673, 602, 1663, 600, 1694, 532, 1688, 573}, //strobe
  {9093, 4500, 561, 588, 553, 589, 555, 595, 545, 590, 553, 588, 584, 542, 577, 582, 549, 595, 586, 1668, 577, 1712, 518, 1709, 555, 1707, 578, 563, 546, 1726, 559, 1685, 544, 1710, 550, 1710, 544, 1705, 576, 567, 554, 582, 566, 1688, 551, 590, 578, 571, 548, 591, 548, 601, 542, 589, 552, 1702, 554, 1703, 579, 574, 544, 1704, 572, 1681, 561, 1702, 545}, //fade
  {9111, 4522, 605, 524, 608, 534, 587, 569, 597, 538, 608, 536, 575, 571, 563, 561, 612, 537, 604, 1658, 598, 1652, 605, 1658, 574, 1679, 573, 563, 611, 1641, 579, 1683, 575, 1670, 609, 1662, 628, 1626, 572, 1674, 621, 528, 602, 1645, 594, 548, 605, 537, 578, 563, 590, 552, 606, 539, 578, 561, 609, 1657, 571, 562, 605, 1683, 580, 1653, 578, 1720, 566} //smooth
  };
unsigned int irBuf[200];

void sendir(int i) {
  memcpy_P ( irBuf, &irTable[i][0], 67 * 2);
  irsend.sendRaw (irBuf, 67, 38);
  delay(70);
  irsend.sendRaw (irBuf, 67, 38);
}

void loop() 
{

   while (Serial.available() > 0)
    {
        char recieved = Serial.read();
        inData += recieved; 

        // Process message when new line character is recieved
        if (recieved == '\n')
        {

    if (inData == "brightup\n") {
      sendir(0);
    }
    if (inData == "brightdown\n") {
      sendir(1);
    }
    if (inData == "off\n") {
      sendir(2);
    }
    if (inData == "on\n") {
      sendir(3);
    }

    if (inData == "r\n") {
      sendir(4);
    }
    if (inData == "r1\n") {
      sendir(5);
    }
    if (inData == "r2\n") {
      sendir(6);
    }
    if (inData == "r3\n") {
      sendir(7);
    }
    if (inData == "r4\n") {
      sendir(8);
    }
    if (inData == "g\n") {
      sendir(9);
    }
    if (inData == "g1\n") {
      sendir(10);
    }
    if (inData == "g2\n") {
      sendir(11);
    }
    if (inData == "g3\n") {
      sendir(12);
    }
    if (inData == "g4\n") {
      sendir(13);
    }

    if (inData == "b\n") {
      sendir(14);
    }
    if (inData == "b1\n") {
      sendir(15);
    }
    if (inData == "b2\n") {
      sendir(16);
    }
    if (inData == "b3\n") {
      sendir(17);
    }
    if (inData == "b4\n") {
      sendir(18);
    }

    if (inData == "w\n") {
      sendir(19);
    }
    if (inData == "flash\n") {
      sendir(20);
    }
    if (inData == "strobe\n") {
      sendir(21);
    }
    if (inData == "fade\n") {
      sendir(22);
    }
    if (inData == "smooth\n") {
      sendir(23);
    }
    
   
     Serial.print(inData);
        
            inData = ""; // Clear recieved buffer
        }
    }

}
